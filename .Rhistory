xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
par(mfrow = c(1,2))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
par(mfrow = c(2,1))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
par(mfrow = c(1,3))
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
jpeg("porcodio.jpeg", quality = 100)
jpeg("img\1.png", quality = 100)
jpeg("img\\1.png", quality = 100)
jpeg("1.png", quality = 100)
jpeg("1.png", quality = 100)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
getwd())
getwd()
jpeg("1.png", quality = 75)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
jpeg("1.jpeg", quality = 75)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
jpeg("2.jpeg", quality = 75)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
jpeg("2.jpeg", quality = 100)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
jpeg("2.jpeg", quality = 10)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
jpeg("2.jpeg", quality = 10000)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
jpeg("2.jpeg")
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
setwd("C:\Users\fsilv\Desktop\Statistical-learning")
setwd("C:\\Users\\fsilv\\Desktop\\Statistical-learning")
png("1.png", units = "in", width = 6, height = 5, res = 600)
par(mfrow = c(3,3))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
png("1.png", units = "in", width = 6, height = 5, res = 600)
par(mfrow = c(2,2))
hist(data$GRE, 40,
xlab = "GRE",
main = "Distribuzione GRE SCORE")
hist(data$TOEFL, 40,
xlab = "TOEFL",
main = "Distribuzione TOEFL SCORE")
hist(data$UniRatings, 40,
xlab = "University Rating",
main = "Distribuzione University Rating")
hist(data$SOP, 40,
xlab = "SOP",
main = "Distribuzione SOP")
hist(data$LOR, 40,
xlab = "LOR",
main = "Distribuzione LOR")
hist(data$CGPA, 40,
xlab = "CGPA",
main = "Distribuzione CGPA")
hist(data$Research, 40,
xlab = "Research",
main = "Distribuzione Research")
hist(data$Admit, 40,
xlab = "Chance of Admit",
main = "Distribuzione Chance of Admit")
dev.off()
par(mfrow = c(3,3))
plot(data$GRE,
data$Admit,
main = "GRE score vs Chance of Admit",
xlab = "GRE score",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$GRE, data = mtcars), col = "blue")
plot(data$TOEFL,
data$Admit,
main = "TOEFL score vs Chance of Admit",
xlab = "TOEFL score",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$TOEFL, data = mtcars), col = "blue")
plot(data$UniRatings,
data$Admit,
main = "UniRatings vs Chance of Admit",
xlab = "UniRatings",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$UniRatings, data = mtcars), col = "blue")
plot(data$SOP,
data$Admit,
main = "SOP vs Chance of Admit",
xlab = "SOP",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$SOP, data = mtcars), col = "blue")
plot(data$LOR,
data$Admit,
main = "LOR vs Chance of Admit",
xlab = "LOR",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$LOR, data = mtcars), col = "blue")
plot(data$CGPA,
data$Admit,
main = "CGPA vs Chance of Admit",
xlab = "CGPA",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$CGPA, data = mtcars), col = "blue")
plot(data$Research,
data$Admit,
main = "Research vs Chance of Admit",
xlab = "Research",
ylab = "Chance of Admit")
abline(lm(data$Admit ~ data$Research, data = mtcars), col = "blue")
library(ggplot2)
library(GGally)
par(mfrow = c(1,1))
cor_scores <- cor(data)
corrplot(cor_scores, method="number", type = 'lower')
summary(data)
# after standirzation lets check the outliers
par(mfrow = c(1,1))
boxplot(scale(data))$out
?boxplot
detect_outlier <- function(x) {
Quantile1 <- quantile(x, probs=.25)
Quantile3 <- quantile(x, probs=.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outlier <- function(dataframe) {
columns <- names(dataframe)
for (col in columns) {
dataframe <- dataframe[!detect_outlier(dataframe[[col]]), ]
}
print("Remove outliers")
print(dataframe)
}
# after standirzation lets check the outliers
par(mfrow = c(1,1))
boxplot(scale(data))$out
for(i in 1:2){
data <- remove_outlier(data)
}
# crate multiple dataset to fit later
data <- data %>% relocate(CGPA, .after=TOEFL)
par(mfrow = c(1,1))
boxplot(scale(data))$out
data <- read.csv("C:\\Users\\fsilv\\Dropbox\\UNI\\stistics\\1.csv")
data <- data.frame(data[,2:9])
colnames(data)[1] = "GRE"
colnames(data)[2] = "TOEFL"
colnames(data)[3] = "UniRatings"
colnames(data)[8] = "Admit"
detect_outlier <- function(x) {
Quantile1 <- quantile(x, probs=.25)
Quantile3 <- quantile(x, probs=.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outlier <- function(dataframe) {
columns <- names(dataframe)
for (col in columns) {
dataframe <- dataframe[!detect_outlier(dataframe[[col]]), ]
}
print("Remove outliers")
print(dataframe)
}
# after standirzation lets check the outliers
par(mfrow = c(1,1))
boxplot(scale(data))$out
data <- remove_outlier(data)
# crate multiple dataset to fit later
data <- data %>% relocate(CGPA, .after=TOEFL)
par(mfrow = c(1,1))
boxplot(scale(data))$out
data <- remove_outlier(data)
# crate multiple dataset to fit later
data <- data %>% relocate(CGPA, .after=TOEFL)
par(mfrow = c(1,1))
boxplot(scale(data))$out
detect_outlier <- function(x) {
Quantile1 <- quantile(x, probs=.25)
Quantile3 <- quantile(x, probs=.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outlier <- function(dataframe) {
columns <- names(dataframe)
for (col in columns) {
dataframe <- dataframe[!detect_outlier(dataframe[[col]]), ]
}
print("Remove outliers")
print(dataframe)
}
# after standirzation lets check the outliers
par(mfrow = c(1,1))
boxplot(scale(data))$out
for(i in 1:6){
data <- remove_outlier(data)
}
# crate multiple dataset to fit later
data <- data %>% relocate(CGPA, .after=TOEFL)
par(mfrow = c(1,1))
boxplot(scale(data))$out
# Transform Target-Var (Arcsin)
admission_transform_y  <- data %>%
select(Admit, GRE, TOEFL, LOR, CGPA, Research) %>%
mutate(Admit = asin(sqrt(Admit)))
fit_arcisn <- lm(Admit ~ + GRE + TOEFL + CGPA + Research, admission_transform_y)
summary(fit_arcisn)
shapiro.test(fit_arcisn$residuals) # no normality
bptest(fit_arcisn) #  homoscehdasticity
# Log10 Regressors
fit_log10 <- lm(asin(sqrt(data$Admit)) ~ log10(GRE) + log10(TOEFL) + log10(CGPA) + Research, data)
summary(fit_log10)
shapiro.test(fit_log10$residuals) # no normality
bptest(fit_log10) #  homoscehdasticity
# Standardized regressors
fit_scale <- lm(asin(sqrt(data$Admit)) ~ scale(GRE) + scale(TOEFL) + scale(CGPA) + Research, data)
summary(fit_scale)
shapiro.test(fit_scale$residuals) # no normality
bptest(fit_scale) #  homoscehdasticity
# Sqrt regressors
fit_sqrt <- lm(asin(sqrt(data$Admit)) ~ sqrt(GRE) + sqrt(TOEFL) + sqrt(CGPA) + Research, data)
summary(fit_sqrt)
shapiro.test(fit_sqrt$residuals) # no normality
bptest(fit_sqrt) #  homoscehdasticity
performance_model <- compare_performance(lm_fit, fit_arcisn, fit_log10, fit_scale, fit_sqrt)
as.data.frame(performance_model)
lm_fit_all <- lm(Admit ~ ., data = data)
lm_fit <- lm(Admit ~ ., data = data)
lm_fit <- update(lm_fit, ~ . - SOP - UniRatings - LOR)
summary(lm_fit)
performance_model <- compare_performance(lm_fit, fit_arcisn, fit_log10, fit_scale, fit_sqrt)
as.data.frame(performance_model)
performance_model <- compare_performance(lm_fit, fit_arcisn, fit_log10, fit_scale, fit_sqrt)
as.data.frame(performance_model)
